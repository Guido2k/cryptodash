{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/WelcomeMsg.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotlight.js","Dashboard/HighchartsConfig.js","Dashboard/HighchartsTheme.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/index.js","Shared/Content.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","cc","require","setApiKey","AppContext","React","createContext","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","setState","console","log","state","firstVisit","prices","historical","results","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","returnData","i","favorites","length","priceFull","priceData","push","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","removeCoin","_","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoDashData","Provider","this","children","Component","Logo","Bar","ControlButtonEl","active","css","hidden","ControlButton","Consumer","lower","onClick","charAt","toUpperCase","substr","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","symbol","topSection","CoinImage","img","spotlight","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","TileClass","CoinHeaderGrid","CoinName","Symbol","CoinGridStyled","getCoinsToDisplay","filterCoins","Object","keys","slice","getLowerSectionCoins","CoinTile","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","filter","result","string","pickBy","symKey","coinName","onKeyUp","e","target","Page","WelcomeMsg","CoinGrid","ConfirmButton","Search","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","price","PriceGrid","SpotlightName","h2","className","chart","height","type","title","text","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","colors","backgroundColor","borderColor","borderWidth","plotBackgroundColor","plotBorderColor","plotBorderWidth","style","color","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","ReactHighcharts","Highcharts","setOptions","HighchartsTheme","ChartSelect","defaultValue","onChange","config","HighchartsConfig","ChartGrid","CoinSpotlight","PriceChart","App","AppLayout","AppBar","Content","Settings","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2eb0e9f2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    padding: 40px;\r\n    \r\n\r\n`    ","import React from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nconst cc = require('cryptocompare');\r\ncc.setApiKey('55a4c10cbc1256601b9059360645cca247d91ff528f95152df9507e9bdc62b3b')\r\n\r\n\r\nexport const AppContext = React.createContext(); \r\n\r\nconst MAX_FAVORITES = 10;\r\nconst TIME_UNITS = 10;\r\n\r\nexport class AppProvider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            page: 'dashboard',\r\n            favorites: ['BTC', 'ETH', 'XRP', 'ADA', 'LINK'],\r\n            timeInterval: 'months',\r\n            ...this.savedSettings(),\r\n            setPage: this.setPage,\r\n            addCoin: this.addCoin,\r\n            removeCoin: this.removeCoin,\r\n            isInFavorites: this.isInFavorites,\r\n            confirmFavorites: this.confirmFavorites,\r\n            setFilteredCoins: this.setFilteredCoins,\r\n            setCurrentFavorite: this.setCurrentFavorite,\r\n            changeChartSelect: this.changeChartSelect\r\n\r\n        }\r\n    }\r\n\r\ncomponentDidMount = () => {\r\n    this.fetchCoins();\r\n    this.fetchPrices();\r\n    this.fetchHistorical();\r\n\r\n}\r\n\r\nfetchCoins = async () => {\r\n    let coinList = (await cc.coinList()).Data;\r\n    this.setState({coinList})\r\n    console.log(coinList)\r\n}\r\n\r\nfetchPrices = async () => {\r\n    if(this.state.firstVisit) return;\r\n    let prices = await this.prices();\r\n    console.log(prices);\r\n    this.setState({prices});\r\n}\r\n\r\nfetchHistorical = async () => {\r\n    if(this.state.firstVisit) return;\r\n    let results = await this.historical();\r\n    let historical = [\r\n        {\r\n            name: this.state.currentFavorite, \r\n            data: results.map((ticker, index) => [\r\n                moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\r\n                ticker.USD\r\n\r\n            ])\r\n        }\r\n    ]\r\n    this.setState({historical});\r\n\r\n}\r\n\r\n\r\nprices = async () => {\r\n    let returnData = [];\r\n    for(let i=0; i<this.state.favorites.length; i++){\r\n        try{ \r\n        let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\r\n        returnData.push(priceData);\r\n        }catch (e){\r\n            console.warn('Fetch price error: ', e)\r\n        }\r\n    }\r\n    return returnData;\r\n}\r\n\r\nhistorical = () => {\r\n    let promises = [];\r\n    for(let units = TIME_UNITS; units > 0; units--){\r\n        promises.push(\r\n           cc.priceHistorical(\r\n               this.state.currentFavorite,\r\n               ['USD'], \r\n               moment()\r\n               .subtract({[this.state.timeInterval]: units})\r\n               .toDate()\r\n               \r\n           ) \r\n        )\r\n    }\r\n    return Promise.all(promises);\r\n\r\n}\r\n\r\n\r\naddCoin = key => {\r\n    let favorites = [...this.state.favorites];\r\n        if(favorites.length < MAX_FAVORITES){\r\n            favorites.push(key);\r\n            this.setState({favorites});\r\n        }\r\n}\r\n\r\nremoveCoin = key => {\r\n    let favorites = [...this.state.favorites];\r\n    this.setState({favorites: _.pull(favorites, key)})\r\n}\r\n\r\nisInFavorites = key => _.includes(this.state.favorites, key);\r\n\r\n\r\nconfirmFavorites = () => {\r\n        let currentFavorite = this.state.favorites[0];\r\n        this.setState({\r\n            firstVisit: false,\r\n            page: 'dashboard',\r\n            currentFavorite,\r\n            historical: null,\r\n            prices: null\r\n        }, () => {\r\n            this.fetchPrices();\r\n            this.fetchHistorical();\r\n            \r\n        });\r\n\r\n        localStorage.setItem('cryptoDash', JSON.stringify({\r\n            favorites: this.state.favorites,\r\n            currentFavorite\r\n        }));\r\n    }\r\n\r\n    setCurrentFavorite = (sym) => {\r\n        this.setState({\r\n            currentFavorite: sym,\r\n            historical: null\r\n        }, this.fetchHistorical);\r\n        localStorage.setItem('cryptoDash', JSON.stringify({\r\n            ...JSON.parse(localStorage.getItem('cryptoDash')),\r\n            currentFavorite: sym\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    savedSettings(){\r\n        let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\r\n        if(!cryptoDashData){\r\n            return{page:'settings', firstVisit: true}\r\n        }    \r\n        let{favorites, currentFavorite} = cryptoDashData;\r\n        return{favorites, currentFavorite};\r\n\r\n    }\r\n\r\n    setPage = page => this.setState({page})\r\n\r\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\r\n\r\n    changeChartSelect = (value) => {\r\n        \r\n        this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <AppContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {AppContext} from \"./AppProvider\";\r\nimport './App.css';\r\n\r\n//Logo Settings //\r\n\r\nconst Logo = styled.div`\r\n    font-size: 1.5em;\r\n    @media (max-width: 780px) {\r\n        {\r\n            font-size: 1.0em;\r\n        }\r\n    @media (max-width: 362px) {\r\n            {\r\n                font-size: 0.8em;\r\n            }    \r\n    }\r\n`\r\n\r\n// Links at top right\r\n\r\nconst Bar = styled.div`\r\n    display: grid;\r\n    margin-bottom: 40px;\r\n    grid-template-columns: 400px auto 110px 100px;\r\n    @media (max-width: 790px) {\r\n         grid-template-columns: 235px auto 130px 130px;\r\n         font-size: 0.9em;\r\n    } \r\n    @media (max-width: 500px) {\r\n        grid-template-columns: 130px 50px 95px auto;\r\n        margin-right: 10px;\r\n        font-size: 0.8em;\r\n   }      \r\n    \r\n    @media (max-width: 400px) {\r\n        grid-template-columns: 110px 40px 83px auto;\r\n        margin-right: 5px;\r\n        font-size: 0.8em;\r\n   }\r\n    @media (max-width: 376px) {\r\n        grid-template-columns: 100px 35px 83px auto;\r\n        font-size: 0.8em;\r\n    }\r\n`\r\nconst ControlButtonEl = styled.div`\r\n    cursor: pointer;\r\n    ${props => props.active && css`\r\n        color: #25fe25;\r\n        text-shadow: 3px 3px 60px white;\r\n     `}\r\n     ${props => props.hidden && css`\r\n        display: none;\r\n\r\n     `\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\nfunction toProperCase(lower){\r\n    return lower.charAt(0).toUpperCase() + lower.substr(1);\r\n}\r\n\r\nfunction ControlButton({name}){\r\n    return(\r\n        <AppContext.Consumer>\r\n            {({firstVisit, page, setPage}) => (\r\n                <ControlButtonEl \r\n                    active={page === name}\r\n                    onClick={()=> setPage(name)}\r\n                    hidden={firstVisit && name === 'dashboard'}>\r\n                    {toProperCase(name)}\r\n                </ControlButtonEl>\r\n            )}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n\r\n\r\nexport default function(){\r\n    return(\r\n        <Bar>\r\n            <Logo>KryptoDash by Sandman Solutions</Logo>\r\n            <div/>\r\n            <ControlButton active name=\"dashboard\"/>\r\n            <ControlButton name=\"settings\"/>\r\n            \r\n        </Bar>\r\n    )    \r\n}\r\n\r\n","import React from 'react';\r\nimport {AppContext} from '../App/AppProvider';\r\n\r\n\r\n\r\nexport default function ({firstVisit}) {\r\n    return (\r\n        <AppContext.Consumer>\r\n        {({firstVisit}) =>\r\n            firstVisit ? <div>\r\n                Please select favorite coins to begin.{' '}\r\n            </div> : null\r\n        }\r\n        </AppContext.Consumer>    \r\n        \r\n    );   \r\n}\r\n\r\n","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#061a44';\r\nexport const color2 = lightTheme ? 'white' : '#010e2c';\r\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\r\n\r\nif (lightTheme) {\r\n  document.body.style.background = '#e1eaee';\r\n  document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;';","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport {fontSize1, greenBoxShadow, color3} from '../Shared/Styles'; \r\n\r\n\r\nconst ConfirmButtonStyled = styled.div`\r\n    margin-top: 30px;\r\n    color: ${color3};\r\n    ${fontSize1}\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    border: 2px solid rgba(100,100,100, 0.3);\r\n    &:hover {\r\n        ${greenBoxShadow}\r\n    }\r\n    @media (max-width: 767px) {\r\n        {\r\n            margin-top: 37px;\r\n            font-size: 1.0em;\r\n            width: 175px;\r\n            margin-left: 10%;\r\n            text-align: center;\r\n        }\r\n\r\n`\r\nexport const CenterDiv = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n`\r\n\r\nexport default function(){\r\n    return <AppContext.Consumer>\r\n        {({confirmFavorites})=>\r\n            <CenterDiv>\r\n                <ConfirmButtonStyled onClick={confirmFavorites}>\r\n                    Confirm Favorites  \r\n                </ConfirmButtonStyled>\r\n            \r\n            \r\n            </CenterDiv>\r\n    }    \r\n    </AppContext.Consumer>\r\n}","import React from 'react';\r\nimport {AppContext} from '../App/AppProvider';\r\n\r\nexport default function ({name, children}) {\r\n    return <AppContext.Consumer>\r\n        {({page}) => {\r\n            if(page !== name) {\r\n                return null;\r\n            }\r\n        return <div> {children} </div>    \r\n\r\n        }}\r\n    \r\n    </AppContext.Consumer>\r\n}","import styled from 'styled-components';\r\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from './Styles';\r\n\r\nexport const Tile = styled.div`\r\n    ${subtleBoxShadow};\r\n    ${lightBlueBackground};\r\n    padding: 10px;\r\n\r\n`\r\n\r\nexport const SelectableTile = styled(Tile)`\r\n    &:hover{\r\n        cursor: pointer;\r\n        ${greenBoxShadow}\r\n    }\r\n\r\n`\r\n\r\nexport const DeletableTile = styled(SelectableTile)`\r\n    &:hover{\r\n        cursor: pointer;\r\n        ${redBoxShadow}\r\n    }\r\n\r\n`\r\n\r\nexport const DisabledTile = styled(Tile)`\r\n    pointer-events: none;\r\n    opacity: 0.4;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {DeletableTile} from '../Shared/Tile';\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n`;\r\n\r\nexport const CoinSymbol = styled.div`\r\n    justify-self: right;\r\n    font-size: 0.5em;\r\n\r\n`\r\nconst DeleteIcon = styled.div`\r\n    justify-self: right;\r\n    display: none;\r\n    ${DeletableTile}:hover & {\r\n        display: block;\r\n        color: red;\r\n    }\r\n`\r\n\r\n\r\nexport default function ({name, symbol, topSection}){\r\n    return <CoinHeaderGridStyled>\r\n        <div>{name}</div>\r\n        {topSection ? (\r\n            <DeleteIcon> X </DeleteIcon>\r\n            ) : (  <CoinSymbol>{symbol}</CoinSymbol>\r\n            )}\r\n    </CoinHeaderGridStyled>\r\n\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\n\r\nconst CoinImage = styled.img`\r\n    height: 50px;\r\n    ${props => props.spotlight && css`\r\n        height: 200px;\r\n        margin: auto;\r\n        margin-top: 33%;\r\n        display: block;\r\n        @media (max-width: 768px)  {\r\n            {\r\n              display: flex;  \r\n              height: 65px;\r\n              float: left;\r\n              margin-top: -15px;\r\n              margin-left: 10%;\r\n              \r\n            }\r\n        }   \r\n    `}\r\n\r\n`\r\n\r\nexport default function ({coin, spotlight}) {\r\n    return <CoinImage\r\n        spotlight={spotlight}\r\n        alt={coin.CoinSymbol}\r\n        \r\n        src={`http://cryptocompare.com/${\r\n            coin.ImageUrl\r\n        }`}\r\n    />;    \r\n\r\n}\r\n","import React from 'react';\r\nimport {AppContext} from '../App/AppProvider';\r\nimport {SelectableTile, DisabledTile, DeletableTile} from '../Shared/Tile';\r\nimport CoinHeaderGrid from './CoinHeaderGrid';\r\nimport CoinImage from '../Shared/CoinImage';\r\n\r\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\r\n    return topSection ? () => {\r\n        removeCoin(coinKey)\r\n    } : () => {\r\n        addCoin(coinKey)\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default function ({coinKey, topSection}){\r\n    \r\n    \r\n    return <AppContext.Consumer>\r\n        {({coinList, addCoin, removeCoin, isInFavorites}) => {\r\n            let coin = coinList[coinKey];\r\n            \r\n            let TileClass = SelectableTile;\r\n                if(topSection){\r\n                    TileClass = DeletableTile;\r\n                }else if(isInFavorites(coinKey)){\r\n                    TileClass = DisabledTile;\r\n                }\r\n\r\n                \r\n            \r\n\r\n            return <TileClass\r\n                onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\r\n            \r\n            >\r\n                <CoinHeaderGrid topSection={topSection} name= {coin.CoinName} symbol={coin.Symbol}/>\r\n                <CoinImage coin = {coin}/>\r\n                \r\n            \r\n            </TileClass>\r\n        }}\r\n    \r\n    </AppContext.Consumer>\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from '../App/AppProvider';\r\nimport CoinTile from './CoinTile';\r\n\r\n//Settings main coin grid choosing coins\r\n\r\nexport const CoinGridStyled = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n    grid-gap: 15px;\r\n    margin-top: 40px;\r\n    @media (max-width: 768px) {\r\n        grid-template-columns: repeat(4, minmax(95px, 1fr));\r\n        grid-gap: 10px;\r\n        }\r\n    }\r\n    @media (max-width: 415px)  {\r\n        {\r\n            grid-template-columns: repeat(3, minmax(95px, 1fr));\r\n            grid-gap: 10px;\r\n          \r\n        }\r\n      } \r\n\r\n    @media (max-width: 376px) {\r\n        grid-template-columns: repeat(2, minmax(50px, 1fr)); \r\n        grid-gap: 10px;   \r\n   }\r\n`\r\n\r\nfunction getLowerSectionCoins(coinList, filteredCoins){\r\n    return (filteredCoins && Object.keys(filteredCoins)) ||\r\n    Object.keys(coinList).slice(0, 100);\r\n\r\n\r\n}\r\n\r\n\r\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins){\r\n    return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\r\n;\r\n}\r\n\r\n\r\nexport default function ({topSection}){\r\n    return (\r\n        <AppContext.Consumer>\r\n        {({coinList, favorites, filteredCoins}) => (\r\n            <CoinGridStyled>\r\n                {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey =>\r\n                    <CoinTile key={coinKey} topSection={topSection} coinKey = {coinKey}/>\r\n                )}  \r\n            </CoinGridStyled>\r\n        )}\r\n        </AppContext.Consumer>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {backgroundColor2} from '../Shared/Styles';\r\nimport {AppContext} from '../App/AppProvider';\r\nimport _ from 'lodash';\r\nimport fuzzy from 'fuzzy';\r\n\r\n\r\n\r\nconst SearchGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 200px 5fr;\r\n    width: 50%;\r\n    margin-left: 33%;\r\n\r\n    @media (max-width: 900px) {\r\n        grid-template-columns: 150px 3.3fr;\r\n        font-size: 0.8em;\r\n        width: 60%;\r\n        margin-left: 25%;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 125px 2.5fr;\r\n        font-size: 0.8em;\r\n        width: 40%;\r\n        margin-left: 30%;\r\n    }\r\n\r\n    @media (max-width: 450px) {\r\n        grid-template-columns: 120px 2.3fr;\r\n        font-size: 0.8em;\r\n        width: 80%;\r\n        margin-left: 10%;\r\n    }\r\n\r\n\r\n    @media (max-width: 380px) {\r\n        grid-template-columns: 120px 2.2fr;\r\n        font-size: 0.8em;\r\n        width: 90%;\r\n        margin-left: 2%;\r\n        \r\n   }\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n    ${backgroundColor2}\r\n    padding: 5px;\r\n    font-size: 1.2rem;\r\n    height: 25px;\r\n    color: #1163c9;\r\n    border: 1px solid;\r\n    place-self: center left;\r\n    @media (max-width: 767px) {\r\n        margin-left: 15px;\r\n        width: 105px;\r\n   }\r\n    `\r\n\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\r\n    // GET all coin symbols\r\n    let coinSymbols = Object.keys(coinList);\r\n    // Get all coin names, map symbol to name\r\n    let coinNames = coinSymbols.map(sym=> coinList[sym].CoinName);\r\n    let allStringsToSearch = coinSymbols.concat(coinNames);\r\n    let fuzzyResults = fuzzy.filter(inputValue ,allStringsToSearch, {}).map(result => result.string);\r\n\r\n    let filteredCoins = _.pickBy(coinList, (result, symKey) => {\r\n        let coinName = result.CoinName;\r\n        return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName))\r\n\r\n    })\r\n    console.log(filteredCoins);\r\n    setFilteredCoins(filteredCoins)\r\n}, 500);\r\n\r\n\r\n\r\nfunction filterCoins(e, setFilteredCoins, coinList){\r\n    let inputValue = e.target.value;\r\n    if(!inputValue){\r\n        setFilteredCoins(null);\r\n        return;\r\n    }\r\n    handleFilter(inputValue, coinList, setFilteredCoins)\r\n}\r\n\r\n\r\nexport default function(){\r\n    return (\r\n        <AppContext.Consumer>\r\n            {({setFilteredCoins, coinList}) => \r\n            <SearchGrid>\r\n                <h2>Seach all coins</h2>\r\n                <SearchInput onKeyUp = {(e) => filterCoins(e, setFilteredCoins, coinList)}/>\r\n            </SearchGrid>\r\n            }   \r\n        </AppContext.Consumer>\r\n        )\r\n\r\n\r\n}","import React from 'react';\r\nimport WelcomeMsg from './WelcomeMsg';\r\nimport ConfirmButton from './ConfirmButton';\r\nimport Page from '../Shared/Page';\r\nimport CoinGrid from './CoinGrid';\r\nimport Search from './Search';\r\n\r\n\r\nexport default function(){\r\n    return <Page name = \"settings\"> \r\n\r\n        <WelcomeMsg/>\r\n        <CoinGrid topSection/>\r\n        <ConfirmButton/>\r\n        <Search/>\r\n        <CoinGrid/>\r\n    </Page>\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {SelectableTile} from '../Shared/Tile';\r\nimport {fontSize3, fontSizeBig, greenBoxShadow} from '../Shared/Styles';\r\nimport {CoinHeaderGridStyled} from '../Settings/CoinHeaderGrid';\r\nimport {AppContext} from '../App/AppProvider';\r\n\r\n\r\nconst JustifyRight = styled.div`\r\n    justify-self: right;\r\n`\r\n\r\nconst JustifyLeft = styled.div`\r\n    justify-self: left;\r\n` \r\n\r\n\r\nconst TickerPrice = styled.div`\r\n    ${fontSizeBig};\r\n`\r\n\r\nconst ChangePct = styled.div`\r\n    color: green;\r\n    font-size: 15px;\r\n    margin-right: 5px;\r\n    @media (max-width: 767px) {\r\n        font-size: 12px;\r\n        \r\n   } \r\n\r\n    ${props => props.red && css`\r\n        color: red;\r\n    `\r\n}\r\n`\r\n\r\nconst numberFormat = number => {\r\n    return +(number + '').slice(0,6)\r\n}\r\n\r\nconst numberFormat2 = number => {\r\n    return +(number + '').slice(0,4)\r\n}\r\n\r\nconst PriceTileStyled = styled(SelectableTile)`\r\n    ${props => props.compact && css`\r\n        ${fontSize3}\r\n        display: grid;\r\n        grid-gap: 6px;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        justify-items: right;\r\n        padding-right: 6px;\r\n    `}\r\n\r\n    ${props => props.currentFavorite && css`\r\n        ${greenBoxShadow}\r\n        pointer-events: none;\r\n    `\r\n}\r\n`\r\nfunction ChangePercent({data}){\r\n        return (\r\n            <JustifyRight>\r\n                <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n                    {numberFormat2(data.CHANGEPCT24HOUR)}%\r\n                </ChangePct>\r\n            </JustifyRight>\r\n        )    \r\n\r\n\r\n}\r\n\r\n\r\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\r\n    return(\r\n        <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\r\n            <CoinHeaderGridStyled>\r\n                <div> {sym} </div>\r\n                \r\n                <ChangePercent data={data}/>\r\n               \r\n            </CoinHeaderGridStyled>\r\n            <TickerPrice>\r\n                ${numberFormat(data.PRICE)}\r\n            </TickerPrice>\r\n        </PriceTileStyled>\r\n    )\r\n\r\n\r\n}\r\n\r\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}) {\r\n    return (\r\n        <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\r\n            \r\n                <JustifyLeft> {sym} </JustifyLeft>\r\n                \r\n                <ChangePercent data={data}/>\r\n               \r\n            \r\n            <div>\r\n                ${numberFormat(data.PRICE)}\r\n            </div>\r\n        </PriceTileStyled>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default function({price, index}){\r\n    let sym = Object.keys(price)[0];\r\n    let data = price[sym]['USD'];\r\n    let TileClass = index < 10 ? PriceTile : PriceTileCompact;\r\n    \r\n    return (\r\n        <AppContext.Consumer>\r\n            {({currentFavorite, setCurrentFavorite}) => \r\n                <TileClass\r\n                 sym={sym}\r\n                 data={data}\r\n                 currentFavorite={currentFavorite === sym}\r\n                 setCurrentFavorite={() => setCurrentFavorite(sym)}\r\n                 >\r\n                </TileClass>\r\n            }\r\n            \r\n            </AppContext.Consumer>\r\n    )         \r\n}","import React from 'react';\r\nimport {AppContext} from '../App/AppProvider';\r\nimport styled from 'styled-components';\r\nimport PriceTile from './PriceTile';\r\n\r\n//Featured Dashboard Coin tiles at top \r\n\r\nconst PriceGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    grid-gap: 15px;\r\n    margin-top: 40px;\r\n    @media (max-width: 786px)  {\r\n        {\r\n          grid-template-columns: repeat(4, 1fr);  \r\n         \r\n        }\r\n    }    \r\n    @media (max-width: 600px)  {\r\n        {\r\n            grid-template-columns: repeat(2, 1fr);\r\n            margin-left: 0px;\r\n        }    \r\n    }    \r\n    @media (max-width: 376px) {\r\n        {\r\n            margin-left: -10px;\r\n        }\r\n    }        \r\n`\r\n\r\nexport default function () {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {({prices}) => (\r\n                <PriceGrid>\r\n                    {prices.map((price, index) => (\r\n                        <PriceTile key={`priceTile-${index}`} index={index} price={price}/>\r\n            ))}\r\n                \r\n                \r\n                </PriceGrid>\r\n\r\n            )}\r\n        \r\n        \r\n        </AppContext.Consumer>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Tile} from '../Shared/Tile';\r\nimport {AppContext} from '../App/AppProvider';\r\nimport CoinImage from '../Shared/CoinImage';\r\n\r\nconst SpotlightName = styled.h2`\r\n    text-align: center;\r\n    margin-bottom: 55px;\r\n    width: 100%;\r\n    @media (max-width: 768px)  {\r\n        {\r\n          margin-bottom: 15px;\r\n          margin-right: 0%;\r\n          width: 100%;\r\n          \r\n        }\r\n      } \r\n    @media (max-width: 376px) {\r\n        {\r\n            margin-left: -10px;\r\n            padding-right: 80px;\r\n        }\r\n    }      \r\n`\r\n\r\n\r\nexport default function() {\r\n    return(\r\n        <AppContext.Consumer>\r\n        {({currentFavorite, coinList}) => \r\n            <Tile>\r\n             <SpotlightName> {coinList[currentFavorite].CoinName} \r\n             \r\n             <CoinImage className=\"coin\" spotlight coin={coinList[currentFavorite]}/> \r\n             \r\n             </SpotlightName>\r\n               \r\n             </Tile>\r\n        }\r\n            </AppContext.Consumer>\r\n    )    \r\n}\r\n","export default function(historical){\r\n    return {\r\n    chart: {\r\n      height: '56%',\r\n      type: 'line'\r\n    },\r\n\r\n\r\n      title: {\r\n      text: 'Crypto Price History'\r\n    },\r\n  \r\n    yAxis: {\r\n      title: {\r\n        text: 'Price (USD)'\r\n      }\r\n    },\r\n  \r\n    xAxis: {type: 'datetime'}, \r\n\r\n    legend: {\r\n      layout: 'vertical',\r\n      align: 'right',\r\n      verticalAlign: 'middle'\r\n    },\r\n  \r\n    plotOptions: {\r\n      series: {\r\n        label: {\r\n          connectorAllowed: false\r\n        },\r\n        pointStart: 2010\r\n      }\r\n    },\r\n  \r\n    series: historical,\r\n \r\n  \r\n    responsive: {\r\n      rules: [{\r\n        condition: {\r\n          maxWidth: 1000\r\n        },\r\n        chartOptions: {\r\n          legend: {\r\n            layout: 'horizontal',\r\n            align: 'center',\r\n            verticalAlign: 'middle'\r\n          }\r\n        }\r\n      }]\r\n    }\r\n  \r\n  }\r\n}","import {lightTheme} from '../Shared/Styles';\r\n\r\nexport default {\r\n    colors: ['#5fff17', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee',\r\n        '#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\r\n    chart: {\r\n        backgroundColor: lightTheme ? 'white' : '#061a44',\r\n        borderColor: '#000000',\r\n        borderWidth: 0,\r\n        className: 'dark-container',\r\n        plotBackgroundColor: lightTheme ? 'white' : '#010e2c',\r\n        plotBorderColor: '#CCCCCC',\r\n        plotBorderWidth: 1,\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#C0C0C0',\r\n            font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\r\n        }\r\n    },\r\n    subtitle: {\r\n        style: {\r\n            color: '#666666',\r\n            font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\r\n        }\r\n    },\r\n    xAxis: {\r\n        gridLineColor: '#333333',\r\n        gridLineWidth: 1,\r\n        labels: {\r\n            style: {\r\n                color: '#A0A0A0'\r\n            }\r\n        },\r\n        lineColor: '#A0A0A0',\r\n        tickColor: '#A0A0A0',\r\n        title: {\r\n            style: {\r\n                color: '#CCC',\r\n                fontWeight: 'bold',\r\n                fontSize: '12px',\r\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        gridLineColor: '#333333',\r\n        labels: {\r\n            style: {\r\n                color: '#A0A0A0'\r\n            }\r\n        },\r\n        lineColor: '#A0A0A0',\r\n        minorTickInterval: null,\r\n        tickColor: '#A0A0A0',\r\n        tickWidth: 1,\r\n        title: {\r\n            style: {\r\n                color: '#CCC',\r\n                fontWeight: 'bold',\r\n                fontSize: '12px',\r\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n            }\r\n        }\r\n    },\r\n    tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n        style: {\r\n            color: '#F0F0F0'\r\n        }\r\n    },\r\n    toolbar: {\r\n        itemStyle: {\r\n            color: 'silver'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        line: {\r\n            dataLabels: {\r\n                color: '#CCC'\r\n            },\r\n            marker: {\r\n                lineColor: '#333'\r\n            }\r\n        },\r\n        spline: {\r\n            marker: {\r\n                lineColor: '#333'\r\n            }\r\n        },\r\n        scatter: {\r\n            marker: {\r\n                lineColor: '#333'\r\n            }\r\n        },\r\n        candlestick: {\r\n            lineColor: 'white'\r\n        }\r\n    },\r\n    legend: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        itemStyle: {\r\n            font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n            color: '#A0A0A0'\r\n        },\r\n        itemHoverStyle: {\r\n            color: '#FFF'\r\n        },\r\n        itemHiddenStyle: {\r\n            color: '#444'\r\n        },\r\n        title: {\r\n            style: {\r\n                color: '#C0C0C0'\r\n            }\r\n        }\r\n    },\r\n    credits: {\r\n        enabled: false,\r\n        style: {\r\n            color: '#666'\r\n        }\r\n    },\r\n    labels: {\r\n        style: {\r\n            color: '#CCC'\r\n        }\r\n    },\r\n    navigation: {\r\n        buttonOptions: {\r\n            symbolStroke: '#DDDDDD',\r\n            theme: {\r\n                fill: {\r\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                    stops: [\r\n                        [0.4, '#606060'],\r\n                        [0.6, '#333333']\r\n                    ]\r\n                },\r\n                stroke: '#000000'\r\n            }\r\n        }\r\n    },\r\n    // scroll charts\r\n    rangeSelector: {\r\n        buttonTheme: {\r\n            fill: {\r\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                stops: [\r\n                    [0.4, '#888'],\r\n                    [0.6, '#555']\r\n                ]\r\n            },\r\n            stroke: '#000000',\r\n            style: {\r\n                color: '#CCC',\r\n                fontWeight: 'bold'\r\n            },\r\n            states: {\r\n                hover: {\r\n                    fill: {\r\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                        stops: [\r\n                            [0.4, '#BBB'],\r\n                            [0.6, '#888']\r\n                        ]\r\n                    },\r\n                    stroke: '#000000',\r\n                    style: {\r\n                        color: 'white'\r\n                    }\r\n                },\r\n                select: {\r\n                    fill: {\r\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                        stops: [\r\n                            [0.1, '#000'],\r\n                            [0.3, '#333']\r\n                        ]\r\n                    },\r\n                    stroke: '#000000',\r\n                    style: {\r\n                        color: 'yellow'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        inputStyle: {\r\n            backgroundColor: '#333',\r\n            color: 'silver'\r\n        },\r\n        labelStyle: {\r\n            color: 'silver'\r\n        }\r\n    },\r\n    navigator: {\r\n        handles: {\r\n            backgroundColor: '#666',\r\n            borderColor: '#AAA'\r\n        },\r\n        outlineColor: '#CCC',\r\n        maskFill: 'rgba(16, 16, 16, 0.5)',\r\n        series: {\r\n            color: '#7798BF',\r\n            lineColor: '#A6C7ED'\r\n        }\r\n    },\r\n    scrollbar: {\r\n        barBackgroundColor: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n                [0.4, '#888'],\r\n                [0.6, '#555']\r\n            ]\r\n        },\r\n        barBorderColor: '#CCC',\r\n        buttonArrowColor: '#CCC',\r\n        buttonBackgroundColor: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n                [0.4, '#888'],\r\n                [0.6, '#555']\r\n            ]\r\n        },\r\n        buttonBorderColor: '#CCC',\r\n        rifleColor: '#FFF',\r\n        trackBackgroundColor: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n                [0, '#000'],\r\n                [1, '#333']\r\n            ]\r\n        },\r\n        trackBorderColor: '#666'\r\n    }\r\n};","import styled from 'styled-components';\r\nimport {backgroundColor2, fontSize2} from '../Shared/Styles';\r\n\r\n//toggler for daily, weekly, monthly chart views\r\n\r\nexport default styled.select`\r\n    ${backgroundColor2}\r\n    ${fontSize2}\r\n    color: #1163c9;\r\n    border: 1px solid;\r\n    \r\n    margin: 4px;\r\n    height: 24px;\r\n    float: right;\r\n    \r\n`\r\n","import HighchartsConfig from './HighchartsConfig';\r\nimport React from 'react';\r\nimport {AppContext} from '../App/AppProvider';\r\nimport ReactHighcharts from 'react-highcharts';\r\nimport {Tile} from '../Shared/Tile';\r\nimport HighchartsTheme from './HighchartsTheme';\r\nimport ChartSelect from './ChartSelect';\r\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\r\n\r\n\r\nexport default function(){\r\n    return <AppContext.Consumer>\r\n        {({historical, changeChartSelect}) => \r\n        <Tile>\r\n            <ChartSelect\r\n                defaultValue={\"months\"}\r\n                onChange={e => changeChartSelect(e.target.value)}\r\n            >\r\n                <option value=\"days\">Daily</option>\r\n                <option value=\"weeks\">Weekly</option>\r\n                <option value=\"months\">Monthly</option>\r\n            </ChartSelect>\r\n            {historical ? <ReactHighcharts config={HighchartsConfig(historical)}/>\r\n            : <div> Retrieving Historical Data... </div>}\r\n        </Tile>\r\n    }\r\n    </AppContext.Consumer>\r\n\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Page from '../Shared/Page';\r\nimport PriceGrid from './PriceGrid';\r\nimport CoinSpotlight from './CoinSpotlight';\r\nimport PriceChart from './PriceChart';\r\n\r\n\r\n// Spotlight coin logo and chart spacing\r\n\r\nconst ChartGrid = styled.div`\r\n    display: grid;\r\n    margin-top: 20px;\r\n    grid-gap: 15px;\r\n    grid-template-columns: 1fr 4fr;\r\n    @media (max-width: 768px)  {\r\n        {\r\n          grid-template-columns: 5fr;\r\n          height: 100px;  \r\n          \r\n        }\r\n      } \r\n      @media (max-width: 375px)  {\r\n        {\r\n          grid-template-columns: 5fr;\r\n          height: 100px;  \r\n          margin-left: -10px;\r\n          \r\n        }\r\n      } \r\n`\r\n\r\n\r\nexport default function(){\r\n    return <Page name = \"dashboard\"> \r\n\r\n           <PriceGrid/>\r\n            <ChartGrid>\r\n                <CoinSpotlight/>\r\n                    <PriceChart/>\r\n                \r\n            </ChartGrid>\r\n    </Page>\r\n}","import React from 'react';\r\nimport {AppContext} from '../App/AppProvider';\r\n\r\nexport default function (props) {\r\n    return <AppContext.Consumer>\r\n    {({coinList, prices, firstVisit}) => {\r\n        if(!coinList) {\r\n            return <div>Loading Coins</div>\r\n        }\r\n        if(!firstVisit && !prices){\r\n            return <div>Loading Prices... </div>\r\n        }\r\n        return <div>{props.children}</div>\r\n    }\r\n}\r\n    </AppContext.Consumer>\r\n}","import React, { Component} from 'react';\nimport './App.css';\n\nimport AppLayout from './AppLayout';\nimport AppBar from './AppBar';\nimport {AppProvider} from './AppProvider';\nimport Settings from '../Settings';\nimport Dashboard from '../Dashboard';\nimport Content from '../Shared/Content';\n\nclass App extends Component {\n  render(){\n    return( \n      <AppLayout>\n        <AppProvider>\n          <AppBar/>\n            <Content>\n              <Settings/>\n              <Dashboard/>\n            </Content>\n        </AppProvider>\n      </AppLayout>\n        );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}